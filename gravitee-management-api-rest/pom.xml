<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2015 The Gravitee team (http://gravitee.io)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>io.gravitee.management</groupId>
		<artifactId>gravitee-management-api</artifactId>
		<version>1.19.0-SNAPSHOT</version>
	</parent>

	<artifactId>gravitee-management-api-rest</artifactId>
	<packaging>jar</packaging>
	<name>Gravitee.io APIM - Management - Rest API</name>

	<properties>
		<swagger2markup.version>1.0.1</swagger2markup.version>
		<swagger2markup.plugin.version>1.0.1</swagger2markup.plugin.version>
		<swagger2markup.extension.version>1.0.0</swagger2markup.extension.version>

		<asciidoctorj.version>1.5.4</asciidoctorj.version>
		<jruby.version>1.7.21</jruby.version>

		<swagger.input>${project.basedir}/src/docs/swagger/swagger_petstore.yaml</swagger.input>
		<asciidoctor.input.directory>${project.basedir}/src/adoc</asciidoctor.input.directory>
		<generated.asciidoc.directory>${project.build.directory}/asciidoc</generated.asciidoc.directory>
		<asciidoctor.html.output.directory>${project.build.directory}/asciidoc/html</asciidoctor.html.output.directory>
		<asciidoctor.pdf.output.directory>${project.build.directory}/asciidoc/pdf</asciidoctor.pdf.output.directory>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>com.github.kongchen</groupId>
				<artifactId>swagger-maven-plugin</artifactId>
				<version>3.1.3</version>
				<configuration>
					<apiSources>
						<apiSource>
							<springmvc>false</springmvc>
							<locations>io.gravitee.management.rest.resource</locations>
							<info>
								<title>Gravitee.io - Rest API</title>
								<version>${project.version}</version>
								<description>This is description of the Gravitee Rest API</description>
								<contact>
									<email>contact@graviteesource.com</email>
									<name>GraviteeSource</name>
									<url>https://graviteesource.com</url>
								</contact>
								<license>
									<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
									<name>Apache 2.0</name>
								</license>
							</info>
							<swaggerDirectory>${project.build.directory}/generated/descriptor/</swaggerDirectory>
						</apiSource>
					</apiSources>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--<plugin>-->
				<!--<groupId>io.github.swagger2markup</groupId>-->
				<!--<artifactId>swagger2markup-maven-plugin</artifactId>-->
				<!--<version>${swagger2markup.plugin.version}</version>-->
				<!--<dependencies>-->
					<!--<dependency>-->
						<!--<groupId>io.github.swagger2markup</groupId>-->
						<!--<artifactId>swagger2markup-import-files-ext</artifactId>-->
						<!--<version>${swagger2markup.extension.version}</version>-->
					<!--</dependency>-->
					<!--<dependency>-->
						<!--<groupId>io.github.swagger2markup</groupId>-->
						<!--<artifactId>swagger2markup</artifactId>-->
						<!--<version>${swagger2markup.version}</version>-->
					<!--</dependency>-->
				<!--</dependencies>-->
				<!--<configuration>-->
					<!--<swaggerInput>${project.build.directory}/generated/descriptor/swagger.json</swaggerInput>-->
					<!--<outputDir>${generated.asciidoc.directory}</outputDir>-->
					<!--<config>-->
						<!--<swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>-->
						<!--<swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy>-->
						<!--<swagger2markup.extensions.dynamicOverview.contentPath>${project.basedir}/src/docs/asciidoc/extensions/overview</swagger2markup.extensions.dynamicOverview.contentPath>-->
						<!--<swagger2markup.extensions.dynamicDefinitions.contentPath>${project.basedir}/src/docs/asciidoc/extensions/definitions</swagger2markup.extensions.dynamicDefinitions.contentPath>-->
						<!--<swagger2markup.extensions.dynamicPaths.contentPath>${project.basedir}/src/docs/asciidoc/extensions/paths</swagger2markup.extensions.dynamicPaths.contentPath>-->
						<!--<swagger2markup.extensions.dynamicSecurity.contentPath>${project.basedir}src/docs/asciidoc/extensions/security</swagger2markup.extensions.dynamicSecurity.contentPath>-->
					<!--</config>-->
				<!--</configuration>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<phase>prepare-package</phase>-->
						<!--<goals>-->
							<!--<goal>convertSwagger2markup</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->

			<!-- Run the generated asciidoc through Asciidoctor to generate
                 other documentation types, such as PDFs or HTML5 -->
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>1.5.3</version>
				<!-- Include Asciidoctor PDF for pdf generation -->
				<dependencies>
					<!-- Comment this section to use the default jruby artifact provided by externalugin -->
					<dependency>
						<groupId>org.jruby</groupId>
						<artifactId>jruby-complete</artifactId>
						<version>${jruby.version}</version>
					</dependency>
					<!-- Comment this section to use the default AsciidoctorJ artifact provided by externalugin -->
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj</artifactId>
						<version>${asciidoctorj.version}</version>
					</dependency>

				</dependencies>
				<!-- Configure generic document generation settings -->
				<configuration>
					<sourceDirectory>${asciidoctor.input.directory}</sourceDirectory>
					<sourceDocumentName>index.adoc</sourceDocumentName>
					<attributes>
						<doctype>book</doctype>
						<toc>left</toc>
						<toclevels>3</toclevels>
						<numbered></numbered>
						<hardbreaks></hardbreaks>
						<sectlinks></sectlinks>
						<sectanchors></sectanchors>
						<generated>${generated.asciidoc.directory}</generated>
					</attributes>
				</configuration>
				<!-- Since each execution can only handle one backend, run
                     separate executions for each desired output type -->
				<executions>
					<execution>
						<id>output-html</id>
						<phase>package</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>html5</backend>
							<outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>

		<!-- Gravitee Management dependencies-->
		<dependency>
			<groupId>io.gravitee.management</groupId>
			<artifactId>gravitee-management-api-security</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.gravitee.management</groupId>
			<artifactId>gravitee-management-api-model</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.gravitee.management</groupId>
			<artifactId>gravitee-management-api-service</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Gravitee dependencies -->
		<dependency>
			<groupId>io.gravitee.definition</groupId>
			<artifactId>gravitee-definition-jackson</artifactId>
		</dependency>

		<dependency>
			<groupId>io.gravitee.common</groupId>
			<artifactId>gravitee-common</artifactId>
		</dependency>

		<dependency>
			<groupId>io.gravitee.el</groupId>
			<artifactId>gravitee-expression-language</artifactId>
		</dependency>

		<!-- Spring dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>1.18</version>
		</dependency>

		<!-- Jersey dependencies -->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-bean-validation</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-spring4</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Swagger -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jersey2-jaxrs</artifactId>
			<version>1.5.10</version>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>

		<!-- Jackson dependencies -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<!-- Unit testing -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-jetty</artifactId>
			<version>${jersey.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock</artifactId>
			<scope>test</scope>
			<version>2.6.0</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Json Path Find-->
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>${jsonpath.version}</version>
		</dependency>
	</dependencies>

	<pluginRepositories>
		<pluginRepository>
			<id>jcenter-snapshots</id>
			<name>jcenter</name>
			<url>http://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
		</pluginRepository>
		<pluginRepository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>jcenter-releases</id>
			<name>jcenter</name>
			<url>http://jcenter.bintray.com</url>
		</pluginRepository>
	</pluginRepositories>
</project>
